{
    "contents" : "---\ntitle: \"Reproducible Research Course Project 1\"\nauthor: \"Miguel Ángel García\"\ndate: \"2015/11/14\"\noutput: html_document\n---\n# Introduction #\nUsing data from activity monitoring devices, the goal of this assignment is to answer different question about this data with the help of the literate statistical programming *knitr* package.\n\n## The Dataset ##\nWe'll use the [Activity Monitoring Data](https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip) dataset, previously downloaded in the working directory.\n\n### Structure ###\nThe first view of the data (using a simple text editor) shows a CSV file with a simple structure. Here are the first three rows:\n\n> \"steps\",\"date\",\"interval\"  \n> NA,\"2012-10-01\",0  \n> NA,\"2012-10-01\",5  \n\nAs we can see, there are three columns in the dataset (the first row shows the names):\n\n* **Steps:** Number of steps in the 5 minutes interval\n* **Date:** Date of the measure (in YYYY-MM-DD format)\n* **Interval:** 5 minutes interval of each measure\n\nIt's noticed that the *steps* column has NA values.\n\n### Loading the Data ###\nWe'll use the *dplyr* package to transform and filter the data. And we'll load it by using the *read.csv* function with the argument *header = TRUE*, as we know that the data has column names in the first row.\n\n```{r, echo= TRUE, warning= FALSE, results= 'hide'}\nlibrary(dplyr, warn.conflicts= FALSE, quietly= TRUE)\nactDS <- tbl_df(read.csv(\"activity.csv\", header= TRUE))\n```\n\n### Some Initial Checks ###\nTo verify that the data is properly loaded, we can do some simple validations. We'll start by printing the first 5 rows of the data:\n```{r, echo= TRUE}\nhead(actDS, 5)\n```\n\nWe can notice that the date column is not typed as *date*:\n```{r, echo= TRUE}\ntypeof(actDS$date)\n```\n\nSo we need to convert it:\n```{r, echo= TRUE}\nactDS$date <- as.Date(actDS$date)\n```\n\n# Questions #\nNow, we have the dataset ready to analyze, so we start to answer the questions one by one.\n\n## Number of Steps Taken per Day ##\nTo answer this question, we use again the functions of the *dplyr* library, grouping by *date* and summarising the data by the *steps* ignoring the *NA* values.\n\n### Calculate of The Mean Steps per Day ###\n```{r, echo= TRUE}\nmeanActbyDay <- actDS %>%\n    group_by(date) %>%\n    summarise(mean_steps= mean(steps, na.rm = TRUE))\n```\n\nTo see the results in a convenient way, we can use the *xtable* library:\n```{r, echo= TRUE, results= 'asis', warning= FALSE}\nlibrary(xtable, warn.conflicts= FALSE, quietly= TRUE)\nmeanActbyDay$date <- as.character(meanActbyDay$date)\nactTable <- xtable(meanActbyDay)\nprint(actTable, type= \"html\")\n```\n\n### Histogram of the Total Number of Steps per Day ###\nFirst, we need to do some calcutations again:\n```{r, echo= TRUE}\ntotalActbyDay <- actDS %>%\n    group_by(date) %>%\n    summarise(total_steps= sum(steps, na.rm = TRUE))\n```\n\nWe can do the histogram now:\n```{r, echo= TRUE}\nhist(totalActbyDay$total_steps, \n     breaks= 30, \n     col= \"lightblue\", \n     main = \"Histogram of Total Steps by Day\", \n     xlab= \"Steps by Day\")\n```\n\n### Report of the Mean and Median of the Total Number of Steps per Day ###\nWe can show the mean and median using *mean()* and *median()* functions but, instead of doing this way, we can achieve same result in a more simple way:\n```{r, echo= TRUE}\nsummary(totalActbyDay$total_steps)\n```\n\nWe can see that the mean of the total number of steps is `r format(round(mean(totalActbyDay$total_steps), 2), scientific= FALSE)` and the median is `r format(round(median(totalActbyDay$total_steps), 2), scientific= FALSE)`.\n\n## Average Daily Activity Pattern ##\nAgain, we need to do some calcutations to know what's the average interval across all days:\n```{r, echo= TRUE}\nmeanActbyInterval <- actDS %>%\n    group_by(interval) %>%\n    summarise(mean_steps= mean(steps, na.rm = TRUE))\n```\n\n### Time Series Plot ###\nWe'll use the *base* plotting system again, because this is a simple graphic:\n```{r, echo= TRUE}\nplot(x= meanActbyInterval$interval, \n     y= meanActbyInterval$mean_steps, \n     type= \"l\", \n     col= \"blue\", \n     main= \"Time Series of Activity Pattern\", \n     xlab= \"5 minute interval\", \n     ylab= \"Average steps\")\n```\n\n### Maximum Number of Steps ###\nWe can see that the `r meanActbyInterval$interval[which(meanActbyInterval$mean_steps == max(meanActbyInterval$mean_steps))]` interval is the highest one.\n\n## Missing Values ##\nThere are an important number of missing values in the data. Until now, we ignoring it (for example, using *na.rm* attribute), but now we'll gonna see if they are introducing bias.\n\n### Total Number of Missing Values ###\nThere are `r sum(is.na(actDS$steps))` missing values *(NA)* in the *steps* column of the data.\n\n### Strategy to Avoid Missing Values ###\nIn order to avoid all the bias in the data introduced by the existing missing values, we choose to replace it by the mean activity by interval (previously calculated).\n\n### Create a New Data Set with NA Filled In ###\n```{r, echo= TRUE}\ncleanActDS <- actDS %>%\n    inner_join(meanActbyInterval, by= \"interval\")\ncleanActDS$steps[is.na(cleanActDS$steps)] <- cleanActDS$mean_steps[is.na(cleanActDS$steps)]\n```\n\n### Histogram of the Total Number of Steps per Day (without NAs) ###\nIn order to do that, we need some calcutations again:\n```{r, echo= TRUE}\ntotalNewActbyDay <- cleanActDS %>%\n    group_by(date) %>%\n    summarise(total_steps= sum(steps, na.rm = TRUE))\n```\n\nWe can do the new histogram:\n```{r, echo= TRUE}\nhist(totalNewActbyDay$total_steps, \n     breaks= 30, \n     col= \"lightgreen\", \n     main = \"Histogram of Total Steps by Day (without missing values)\", \n     xlab= \"Steps by Day\")\n```\n\n### Mean and Median of the Total Number of Steps per Day Without Missing Values ###\nWe can see that the new mean of the total number of steps is `r format(round(mean(totalNewActbyDay$total_steps), 2), scientific= FALSE)` and the new median is `r format(round(median(totalNewActbyDay$total_steps), 2), scientific= FALSE)`.\n\nAs we expected, we noted that the new mean and median values are slightly different from the above ones, because now we have a largest population with more repeated central values.\n\n## Differences in Activity Patterns Between Weekdays and Weekends ##\n### New Factor Variable ###\nI noticed that *weekdays()* function returns the day of the week name in the local language, so, in order to allow reproducibility, I opted for use the *is.weekend()* function, which is part of the *chron* package:\n\n```{r, echo= TRUE}\nlibrary(chron, warn.conflicts= FALSE, quietly= TRUE)\nweekActDS <- cleanActDS\nweekActDS$weekend <- NA\nweekActDS$weekend[which(is.weekend(weekActDS$date))] <- \"weekend\"\nweekActDS$weekend[which(!is.weekend(weekActDS$date))] <- \"weekday\"\nweekActDS$weekend <- factor(weekActDS$weekend)\ntable(weekActDS$weekend)\n```\n\n### Time Series Panel Plot ###\nFirst, the calcutations:\n```{r, echo= TRUE}\nmeanWeekendActbyInterval <- weekActDS %>%\n    filter(weekend == \"weekend\") %>%\n    group_by(interval) %>%\n    summarise(mean_steps= mean(steps, na.rm = TRUE))\n\nmeanWeekdayActbyInterval <- weekActDS %>%\n    filter(weekend == \"weekday\") %>%\n    group_by(interval) %>%\n    summarise(mean_steps= mean(steps, na.rm = TRUE))\n```\n\nNow, the plots:\n```{r, echo= TRUE, fig.height= 8}\npar(mfrow= c(2, 1))\n\nplot(x= meanWeekendActbyInterval$interval, \n     y= meanWeekendActbyInterval$mean_steps, \n     type= \"l\", \n     col= \"green\", \n     main= \"Activity Pattern (Weekend)\", \n     xlab= \"5 minute interval\", \n     ylab= \"Average steps\")\n\nplot(x= meanWeekdayActbyInterval$interval, \n     y= meanWeekdayActbyInterval$mean_steps, \n     type= \"l\", \n     col= \"red\", \n     main= \"Activity Pattern (Weekday)\", \n     xlab= \"5 minute interval\", \n     ylab= \"Average steps\")\n```\n\n*(Sorry for my english, I hope you understand me anyway ;-)*\n",
    "created" : 1447519239201.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3588552729",
    "id" : "9A508A14",
    "lastKnownWriteTime" : 1447619621,
    "path" : "~/repdata-courseproject1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_markdown"
}